name: Deploy Preview Environment

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: '20'
  AWS_REGION: 'us-east-1'

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  deploy-preview:
    name: Deploy PR Preview
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            app/package-lock.json

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_AMPLIFY_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install dependencies
        run: |
          npm ci
          cd app && npm ci

      - name: Install Lambda function dependencies
        run: |
          cd app/amplify/functions/processEssay && npm ci
          cd ../submitEssayToQueue && npm ci

      - name: Create preview branch name
        id: preview-branch
        run: |
          BRANCH_NAME="pr-${{ github.event.pull_request.number }}"
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Deploy preview environment
        id: deploy
        run: |
          cd app
          npx ampx generate outputs --branch ${{ steps.preview-branch.outputs.branch_name }} --app-id ${{ secrets.AMPLIFY_APP_ID }}
          npx ampx sandbox --branch ${{ steps.preview-branch.outputs.branch_name }} --app-id ${{ secrets.AMPLIFY_APP_ID }}
        env:
          AWS_BRANCH: ${{ steps.preview-branch.outputs.branch_name }}
          AWS_APP_ID: ${{ secrets.AMPLIFY_APP_ID }}

      - name: Get preview URL
        id: preview-url
        run: |
          PREVIEW_URL=$(aws amplify get-branch --app-id ${{ secrets.AMPLIFY_APP_ID }} --branch-name ${{ steps.preview-branch.outputs.branch_name }} --query 'branch.displayName' --output text)
          echo "url=https://${{ steps.preview-branch.outputs.branch_name }}.${{ secrets.AMPLIFY_APP_ID }}.amplifyapp.com" >> $GITHUB_OUTPUT

      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const url = '${{ steps.preview-url.outputs.url }}';
            const body = `## ðŸš€ Preview Environment Deployed!
            
            Your preview environment is available at: ${url}
            
            ### Preview Details:
            - **Branch**: \`${{ steps.preview-branch.outputs.branch_name }}\`
            - **Commit**: \`${{ github.event.pull_request.head.sha }}\`
            - **Deployment Time**: \`${new Date().toISOString()}\`
            
            ### What's included:
            - âœ… Frontend application
            - âœ… Backend resources (Lambda, DynamoDB, etc.)
            - âœ… Authentication setup
            - âœ… API endpoints
            
            This preview will be automatically cleaned up when the PR is closed.`;
            
            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('Preview Environment Deployed')
            );
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body,
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body,
              });
            }

  cleanup-preview:
    name: Cleanup PR Preview
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_AMPLIFY_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Delete preview branch
        run: |
          BRANCH_NAME="pr-${{ github.event.pull_request.number }}"
          aws amplify delete-branch --app-id ${{ secrets.AMPLIFY_APP_ID }} --branch-name $BRANCH_NAME || true

      - name: Comment PR about cleanup
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: 'ðŸ§¹ Preview environment has been cleaned up.',
            });