name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '20'
  AWS_REGION: 'us-east-1'

jobs:
  lint-and-typecheck:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            app/package-lock.json

      - name: Install dependencies
        run: |
          npm ci
          cd app && npm ci

      - name: Run ESLint
        run: cd app && npm run lint

      - name: Run TypeScript type check
        run: cd app && npx tsc --noEmit

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            app/package-lock.json

      - name: Install dependencies
        run: |
          npm ci
          cd app && npm ci

      - name: Install Lambda function dependencies
        run: |
          cd app/amplify/functions/processEssay && npm ci
          cd ../submitEssayToQueue && npm ci

      - name: Run unit tests
        run: |
          cd app
          npm test -- --coverage --watchAll=false
        env:
          CI: true

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: app/coverage

  build-test:
    name: Build Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            app/package-lock.json

      - name: Install dependencies
        run: |
          npm ci
          cd app && npm ci

      - name: Install Lambda function dependencies
        run: |
          cd app/amplify/functions/processEssay && npm ci
          cd ../submitEssayToQueue && npm ci

      - name: Build Next.js application
        run: cd app && npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-build
          path: app/.next

  amplify-backend-test:
    name: Amplify Backend Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            app/package-lock.json

      - name: Install dependencies
        run: |
          npm ci
          cd app && npm ci

      - name: Install Lambda function dependencies
        run: |
          cd app/amplify/functions/processEssay && npm ci
          cd ../submitEssayToQueue && npm ci

      - name: Install Amplify CLI
        run: npm install -g @aws-amplify/cli

      - name: Validate Amplify backend
        run: |
          cd app
          npx ampx sandbox --validate-only
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}